// Generated by http://code.google.com/p/protostuff/ ... DO NOT EDIT!
// Generated from openrtb.proto

package org.openrtb;

import java.io.Externalizable;
import java.io.IOException;
import java.io.ObjectInput;
import java.io.ObjectOutput;
import java.util.ArrayList;
import java.util.List;

import com.dyuproject.protostuff.GraphIOUtil;
import com.dyuproject.protostuff.Input;
import com.dyuproject.protostuff.Message;
import com.dyuproject.protostuff.Output;
import com.dyuproject.protostuff.Schema;

public final class Content implements Externalizable, Message<Content> {

    public static Schema<Content> getSchema() {
        return SCHEMA;
    }

    public static Content getDefaultInstance() {
        return DEFAULT_INSTANCE;
    }

    static final Content DEFAULT_INSTANCE = new Content();


    // non-private fields
    // see http://developer.android.com/guide/practices/design/performance.html#package_inner
    String id;
    Integer episode;
    String title;
    String series;
    String season;
    String url;
    List<String> cat;
    VideoQuality videoquality;
    String keywords;
    String contentrating;
    String userrating;
    ContentContext context;
    Bool livestream;
    SourceRelationship sourcerelationship;
    Producer producer;
    Integer len;
    Integer qagmediarating;
    Integer embeddable;
    String language;

    public Content() {

    }

    // getters and setters

    // id

    public String getId() {
        return id;
    }

    public void setId(String id) {
        this.id = id;
    }

    // episode

    public Integer getEpisode() {
        return episode;
    }

    public void setEpisode(Integer episode) {
        this.episode = episode;
    }

    // title

    public String getTitle() {
        return title;
    }

    public void setTitle(String title) {
        this.title = title;
    }

    // series

    public String getSeries() {
        return series;
    }

    public void setSeries(String series) {
        this.series = series;
    }

    // season

    public String getSeason() {
        return season;
    }

    public void setSeason(String season) {
        this.season = season;
    }

    // url

    public String getUrl() {
        return url;
    }

    public void setUrl(String url) {
        this.url = url;
    }

    // cat

    public List<String> getCatList() {
        return cat;
    }

    public void setCatList(List<String> cat) {
        this.cat = cat;
    }

    // videoquality

    public VideoQuality getVideoquality() {
        return videoquality == null ? VideoQuality.VIDEO_QUALITY_UNKNOWN : videoquality;
    }

    public void setVideoquality(VideoQuality videoquality) {
        this.videoquality = videoquality;
    }

    // keywords

    public String getKeywords() {
        return keywords;
    }

    public void setKeywords(String keywords) {
        this.keywords = keywords;
    }

    // contentrating

    public String getContentrating() {
        return contentrating;
    }

    public void setContentrating(String contentrating) {
        this.contentrating = contentrating;
    }

    // userrating

    public String getUserrating() {
        return userrating;
    }

    public void setUserrating(String userrating) {
        this.userrating = userrating;
    }

    // context

    public ContentContext getContext() {
        return context == null ? ContentContext.CONTENT_CONTEXT_VIDEO : context;
    }

    public void setContext(ContentContext context) {
        this.context = context;
    }

    // livestream

    public Bool getLivestream() {
        return livestream == null ? Bool.FALSE : livestream;
    }

    public void setLivestream(Bool livestream) {
        this.livestream = livestream;
    }

    // sourcerelationship

    public SourceRelationship getSourcerelationship() {
        return sourcerelationship == null ? SourceRelationship.SOURCE_RELATIONSHIP_INDIRECT : sourcerelationship;
    }

    public void setSourcerelationship(SourceRelationship sourcerelationship) {
        this.sourcerelationship = sourcerelationship;
    }

    // producer

    public Producer getProducer() {
        return producer;
    }

    public void setProducer(Producer producer) {
        this.producer = producer;
    }

    // len

    public Integer getLen() {
        return len;
    }

    public void setLen(Integer len) {
        this.len = len;
    }

    // qagmediarating

    public Integer getQagmediarating() {
        return qagmediarating;
    }

    public void setQagmediarating(Integer qagmediarating) {
        this.qagmediarating = qagmediarating;
    }

    // embeddable

    public Integer getEmbeddable() {
        return embeddable;
    }

    public void setEmbeddable(Integer embeddable) {
        this.embeddable = embeddable;
    }

    // language

    public String getLanguage() {
        return language;
    }

    public void setLanguage(String language) {
        this.language = language;
    }

    // java serialization

    public void readExternal(ObjectInput in) throws IOException {
        GraphIOUtil.mergeDelimitedFrom(in, this, SCHEMA);
    }

    public void writeExternal(ObjectOutput out) throws IOException {
        GraphIOUtil.writeDelimitedTo(out, this, SCHEMA);
    }

    // message method

    public Schema<Content> cachedSchema() {
        return SCHEMA;
    }

    static final Schema<Content> SCHEMA = new Schema<Content>() {
        // schema methods

        public Content newMessage() {
            return new Content();
        }

        public Class<Content> typeClass() {
            return Content.class;
        }

        public String messageName() {
            return Content.class.getSimpleName();
        }

        public String messageFullName() {
            return Content.class.getName();
        }

        public boolean isInitialized(Content message) {
            return true;
        }

        public void mergeFrom(Input input, Content message) throws IOException {
            for (int number = input.readFieldNumber(this); ; number = input.readFieldNumber(this)) {
                switch (number) {
                    case 0:
                        return;
                    case 1:
                        message.id = input.readString();
                        break;
                    case 2:
                        message.episode = input.readInt32();
                        break;
                    case 3:
                        message.title = input.readString();
                        break;
                    case 4:
                        message.series = input.readString();
                        break;
                    case 5:
                        message.season = input.readString();
                        break;
                    case 6:
                        message.url = input.readString();
                        break;
                    case 7:
                        if (message.cat == null)
                            message.cat = new ArrayList<String>();
                        message.cat.add(input.readString());
                        break;
                    case 8:
                        message.videoquality = VideoQuality.valueOf(input.readEnum());
                        break;
                    case 9:
                        message.keywords = input.readString();
                        break;
                    case 10:
                        message.contentrating = input.readString();
                        break;
                    case 11:
                        message.userrating = input.readString();
                        break;
                    case 12:
                        message.context = ContentContext.valueOf(input.readEnum());
                        break;
                    case 13:
                        message.livestream = Bool.valueOf(input.readEnum());
                        break;
                    case 14:
                        message.sourcerelationship = SourceRelationship.valueOf(input.readEnum());
                        break;
                    case 15:
                        message.producer = input.mergeObject(message.producer, Producer.getSchema());
                        break;

                    case 16:
                        message.len = input.readInt32();
                        break;
                    case 17:
                        message.qagmediarating = input.readInt32();
                        break;
                    case 18:
                        message.embeddable = input.readInt32();
                        break;
                    case 19:
                        message.language = input.readString();
                        break;
                    default:
                        input.handleUnknownField(number, this);
                }
            }
        }


        public void writeTo(Output output, Content message) throws IOException {
            if (message.id != null)
                output.writeString(1, message.id, false);

            if (message.episode != null)
                output.writeInt32(2, message.episode, false);

            if (message.title != null)
                output.writeString(3, message.title, false);

            if (message.series != null)
                output.writeString(4, message.series, false);

            if (message.season != null)
                output.writeString(5, message.season, false);

            if (message.url != null)
                output.writeString(6, message.url, false);

            if (message.cat != null) {
                for (String cat : message.cat) {
                    if (cat != null)
                        output.writeString(7, cat, true);
                }
            }

            if (message.videoquality != null)
                output.writeEnum(8, message.videoquality.number, false);

            if (message.keywords != null)
                output.writeString(9, message.keywords, false);

            if (message.contentrating != null)
                output.writeString(10, message.contentrating, false);

            if (message.userrating != null)
                output.writeString(11, message.userrating, false);

            if (message.context != null)
                output.writeEnum(12, message.context.number, false);

            if (message.livestream != null)
                output.writeEnum(13, message.livestream.number, false);

            if (message.sourcerelationship != null)
                output.writeEnum(14, message.sourcerelationship.number, false);

            if (message.producer != null)
                output.writeObject(15, message.producer, Producer.getSchema(), false);


            if (message.len != null)
                output.writeInt32(16, message.len, false);

            if (message.qagmediarating != null)
                output.writeInt32(17, message.qagmediarating, false);

            if (message.embeddable != null)
                output.writeInt32(18, message.embeddable, false);

            if (message.language != null)
                output.writeString(19, message.language, false);
        }

        public String getFieldName(int number) {
            switch (number) {
                case 1:
                    return "id";
                case 2:
                    return "episode";
                case 3:
                    return "title";
                case 4:
                    return "series";
                case 5:
                    return "season";
                case 6:
                    return "url";
                case 7:
                    return "cat";
                case 8:
                    return "videoquality";
                case 9:
                    return "keywords";
                case 10:
                    return "contentrating";
                case 11:
                    return "userrating";
                case 12:
                    return "context";
                case 13:
                    return "livestream";
                case 14:
                    return "sourcerelationship";
                case 15:
                    return "producer";
                case 16:
                    return "len";
                case 17:
                    return "qagmediarating";
                case 18:
                    return "embeddable";
                case 19:
                    return "language";
                default:
                    return null;
            }
        }

        public int getFieldNumber(String name) {
            final Integer number = fieldMap.get(name);
            return number == null ? 0 : number.intValue();
        }

        final java.util.HashMap<String, Integer> fieldMap = new java.util.HashMap<String, Integer>();

        {
            fieldMap.put("id", 1);
            fieldMap.put("episode", 2);
            fieldMap.put("title", 3);
            fieldMap.put("series", 4);
            fieldMap.put("season", 5);
            fieldMap.put("url", 6);
            fieldMap.put("cat", 7);
            fieldMap.put("videoquality", 8);
            fieldMap.put("keywords", 9);
            fieldMap.put("contentrating", 10);
            fieldMap.put("userrating", 11);
            fieldMap.put("context", 12);
            fieldMap.put("livestream", 13);
            fieldMap.put("sourcerelationship", 14);
            fieldMap.put("producer", 15);
            fieldMap.put("len", 16);
            fieldMap.put("qagmediarating", 17);
            fieldMap.put("embeddable", 18);
            fieldMap.put("language", 19);
        }
    };

}
