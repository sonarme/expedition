/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package org.openrtb.mobile;

@SuppressWarnings("all")
/** App Object used in Bid Request from OpenRTB Mobile 1.0 Spec */
@org.apache.avro.specific.AvroGenerated
public class App extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
    public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"App\",\"namespace\":\"org.openrtb.mobile\",\"doc\":\"App Object used in Bid Request from OpenRTB Mobile 1.0 Spec\",\"fields\":[{\"name\":\"aid\",\"type\":[\"string\",\"null\"],\"required\":\"false\",\"comment\":\"Application ID on the exchange.\"},{\"name\":\"name\",\"type\":[\"string\",\"null\"],\"required\":\"false\",\"comment\":\"Application name; may be masked at publisher's request.\"},{\"name\":\"domain\",\"type\":[\"string\",\"null\"],\"required\":\"false\",\"comment\":\"Domain of the application (e.g., 'mygame.foo.com').\"},{\"name\":\"pid\",\"type\":[\"string\",\"null\"],\"required\":\"false\",\"comment\":\"Publisher ID of the application.\"},{\"name\":\"pub\",\"type\":[\"string\",\"null\"],\"required\":\"false\",\"comment\":\"Publisher name; may be masked at publisher's request.\"},{\"name\":\"pdomain\",\"type\":[\"string\",\"null\"],\"required\":\"false\",\"comment\":\"Domain of the publisher (e.g., 'foopub.com').\"},{\"name\":\"cat\",\"type\":[{\"type\":\"array\",\"items\":\"string\"},\"null\"],\"required\":\"false\",\"comment\":\"Array of content categories of the application (see Section 3.1).\"},{\"name\":\"keywords\",\"type\":[\"string\",\"null\"],\"required\":\"false\",\"comment\":\"Comma separated list of keywords related to application content.\"},{\"name\":\"ver\",\"type\":[\"string\",\"null\"],\"required\":\"false\",\"comment\":\"Application version.\"},{\"name\":\"bundle\",\"type\":[\"string\",\"null\"],\"required\":\"false\",\"comment\":\"Application bundle (e.g., com.foo.mygame).\"},{\"name\":\"paid\",\"type\":[\"int\",\"null\"],\"required\":\"false\",\"comment\":\"'1' if the application is a paid version; else '0' (i.e., free).\"}]}");
    @Deprecated
    public java.lang.CharSequence aid;
    @Deprecated
    public java.lang.CharSequence name;
    @Deprecated
    public java.lang.CharSequence domain;
    @Deprecated
    public java.lang.CharSequence pid;
    @Deprecated
    public java.lang.CharSequence pub;
    @Deprecated
    public java.lang.CharSequence pdomain;
    @Deprecated
    public java.util.List<java.lang.CharSequence> cat;
    @Deprecated
    public java.lang.CharSequence keywords;
    @Deprecated
    public java.lang.CharSequence ver;
    @Deprecated
    public java.lang.CharSequence bundle;
    @Deprecated
    public java.lang.Integer paid;

    /**
     * Default constructor.
     */
    public App() {
    }

    /**
     * All-args constructor.
     */
    public App(java.lang.CharSequence aid, java.lang.CharSequence name, java.lang.CharSequence domain, java.lang.CharSequence pid, java.lang.CharSequence pub, java.lang.CharSequence pdomain, java.util.List<java.lang.CharSequence> cat, java.lang.CharSequence keywords, java.lang.CharSequence ver, java.lang.CharSequence bundle, java.lang.Integer paid) {
        this.aid = aid;
        this.name = name;
        this.domain = domain;
        this.pid = pid;
        this.pub = pub;
        this.pdomain = pdomain;
        this.cat = cat;
        this.keywords = keywords;
        this.ver = ver;
        this.bundle = bundle;
        this.paid = paid;
    }

    public org.apache.avro.Schema getSchema() {
        return SCHEMA$;
    }

    // Used by DatumWriter.  Applications should not call.
    public java.lang.Object get(int field$) {
        switch (field$) {
            case 0:
                return aid;
            case 1:
                return name;
            case 2:
                return domain;
            case 3:
                return pid;
            case 4:
                return pub;
            case 5:
                return pdomain;
            case 6:
                return cat;
            case 7:
                return keywords;
            case 8:
                return ver;
            case 9:
                return bundle;
            case 10:
                return paid;
            default:
                throw new org.apache.avro.AvroRuntimeException("Bad index");
        }
    }

    // Used by DatumReader.  Applications should not call.
    @SuppressWarnings(value = "unchecked")
    public void put(int field$, java.lang.Object value$) {
        switch (field$) {
            case 0:
                aid = (java.lang.CharSequence) value$;
                break;
            case 1:
                name = (java.lang.CharSequence) value$;
                break;
            case 2:
                domain = (java.lang.CharSequence) value$;
                break;
            case 3:
                pid = (java.lang.CharSequence) value$;
                break;
            case 4:
                pub = (java.lang.CharSequence) value$;
                break;
            case 5:
                pdomain = (java.lang.CharSequence) value$;
                break;
            case 6:
                cat = (java.util.List<java.lang.CharSequence>) value$;
                break;
            case 7:
                keywords = (java.lang.CharSequence) value$;
                break;
            case 8:
                ver = (java.lang.CharSequence) value$;
                break;
            case 9:
                bundle = (java.lang.CharSequence) value$;
                break;
            case 10:
                paid = (java.lang.Integer) value$;
                break;
            default:
                throw new org.apache.avro.AvroRuntimeException("Bad index");
        }
    }

    /**
     * Gets the value of the 'aid' field.
     */
    public java.lang.CharSequence getAid() {
        return aid;
    }

    /**
     * Sets the value of the 'aid' field.
     *
     * @param value the value to set.
     */
    public void setAid(java.lang.CharSequence value) {
        this.aid = value;
    }

    /**
     * Gets the value of the 'name' field.
     */
    public java.lang.CharSequence getName() {
        return name;
    }

    /**
     * Sets the value of the 'name' field.
     *
     * @param value the value to set.
     */
    public void setName(java.lang.CharSequence value) {
        this.name = value;
    }

    /**
     * Gets the value of the 'domain' field.
     */
    public java.lang.CharSequence getDomain() {
        return domain;
    }

    /**
     * Sets the value of the 'domain' field.
     *
     * @param value the value to set.
     */
    public void setDomain(java.lang.CharSequence value) {
        this.domain = value;
    }

    /**
     * Gets the value of the 'pid' field.
     */
    public java.lang.CharSequence getPid() {
        return pid;
    }

    /**
     * Sets the value of the 'pid' field.
     *
     * @param value the value to set.
     */
    public void setPid(java.lang.CharSequence value) {
        this.pid = value;
    }

    /**
     * Gets the value of the 'pub' field.
     */
    public java.lang.CharSequence getPub() {
        return pub;
    }

    /**
     * Sets the value of the 'pub' field.
     *
     * @param value the value to set.
     */
    public void setPub(java.lang.CharSequence value) {
        this.pub = value;
    }

    /**
     * Gets the value of the 'pdomain' field.
     */
    public java.lang.CharSequence getPdomain() {
        return pdomain;
    }

    /**
     * Sets the value of the 'pdomain' field.
     *
     * @param value the value to set.
     */
    public void setPdomain(java.lang.CharSequence value) {
        this.pdomain = value;
    }

    /**
     * Gets the value of the 'cat' field.
     */
    public java.util.List<java.lang.CharSequence> getCat() {
        return cat;
    }

    /**
     * Sets the value of the 'cat' field.
     *
     * @param value the value to set.
     */
    public void setCat(java.util.List<java.lang.CharSequence> value) {
        this.cat = value;
    }

    /**
     * Gets the value of the 'keywords' field.
     */
    public java.lang.CharSequence getKeywords() {
        return keywords;
    }

    /**
     * Sets the value of the 'keywords' field.
     *
     * @param value the value to set.
     */
    public void setKeywords(java.lang.CharSequence value) {
        this.keywords = value;
    }

    /**
     * Gets the value of the 'ver' field.
     */
    public java.lang.CharSequence getVer() {
        return ver;
    }

    /**
     * Sets the value of the 'ver' field.
     *
     * @param value the value to set.
     */
    public void setVer(java.lang.CharSequence value) {
        this.ver = value;
    }

    /**
     * Gets the value of the 'bundle' field.
     */
    public java.lang.CharSequence getBundle() {
        return bundle;
    }

    /**
     * Sets the value of the 'bundle' field.
     *
     * @param value the value to set.
     */
    public void setBundle(java.lang.CharSequence value) {
        this.bundle = value;
    }

    /**
     * Gets the value of the 'paid' field.
     */
    public java.lang.Integer getPaid() {
        return paid;
    }

    /**
     * Sets the value of the 'paid' field.
     *
     * @param value the value to set.
     */
    public void setPaid(java.lang.Integer value) {
        this.paid = value;
    }

    /**
     * Creates a new App RecordBuilder
     */
    public static org.openrtb.mobile.App.Builder newBuilder() {
        return new org.openrtb.mobile.App.Builder();
    }

    /**
     * Creates a new App RecordBuilder by copying an existing Builder
     */
    public static org.openrtb.mobile.App.Builder newBuilder(org.openrtb.mobile.App.Builder other) {
        return new org.openrtb.mobile.App.Builder(other);
    }

    /**
     * Creates a new App RecordBuilder by copying an existing App instance
     */
    public static org.openrtb.mobile.App.Builder newBuilder(org.openrtb.mobile.App other) {
        return new org.openrtb.mobile.App.Builder(other);
    }

    /**
     * RecordBuilder for App instances.
     */
    public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<App>
            implements org.apache.avro.data.RecordBuilder<App> {

        private java.lang.CharSequence aid;
        private java.lang.CharSequence name;
        private java.lang.CharSequence domain;
        private java.lang.CharSequence pid;
        private java.lang.CharSequence pub;
        private java.lang.CharSequence pdomain;
        private java.util.List<java.lang.CharSequence> cat;
        private java.lang.CharSequence keywords;
        private java.lang.CharSequence ver;
        private java.lang.CharSequence bundle;
        private java.lang.Integer paid;

        /**
         * Creates a new Builder
         */
        private Builder() {
            super(org.openrtb.mobile.App.SCHEMA$);
        }

        /**
         * Creates a Builder by copying an existing Builder
         */
        private Builder(org.openrtb.mobile.App.Builder other) {
            super(other);
        }

        /**
         * Creates a Builder by copying an existing App instance
         */
        private Builder(org.openrtb.mobile.App other) {
            super(org.openrtb.mobile.App.SCHEMA$);
            if (isValidValue(fields()[0], other.aid)) {
                this.aid = data().deepCopy(fields()[0].schema(), other.aid);
                fieldSetFlags()[0] = true;
            }
            if (isValidValue(fields()[1], other.name)) {
                this.name = data().deepCopy(fields()[1].schema(), other.name);
                fieldSetFlags()[1] = true;
            }
            if (isValidValue(fields()[2], other.domain)) {
                this.domain = data().deepCopy(fields()[2].schema(), other.domain);
                fieldSetFlags()[2] = true;
            }
            if (isValidValue(fields()[3], other.pid)) {
                this.pid = data().deepCopy(fields()[3].schema(), other.pid);
                fieldSetFlags()[3] = true;
            }
            if (isValidValue(fields()[4], other.pub)) {
                this.pub = data().deepCopy(fields()[4].schema(), other.pub);
                fieldSetFlags()[4] = true;
            }
            if (isValidValue(fields()[5], other.pdomain)) {
                this.pdomain = data().deepCopy(fields()[5].schema(), other.pdomain);
                fieldSetFlags()[5] = true;
            }
            if (isValidValue(fields()[6], other.cat)) {
                this.cat = data().deepCopy(fields()[6].schema(), other.cat);
                fieldSetFlags()[6] = true;
            }
            if (isValidValue(fields()[7], other.keywords)) {
                this.keywords = data().deepCopy(fields()[7].schema(), other.keywords);
                fieldSetFlags()[7] = true;
            }
            if (isValidValue(fields()[8], other.ver)) {
                this.ver = data().deepCopy(fields()[8].schema(), other.ver);
                fieldSetFlags()[8] = true;
            }
            if (isValidValue(fields()[9], other.bundle)) {
                this.bundle = data().deepCopy(fields()[9].schema(), other.bundle);
                fieldSetFlags()[9] = true;
            }
            if (isValidValue(fields()[10], other.paid)) {
                this.paid = data().deepCopy(fields()[10].schema(), other.paid);
                fieldSetFlags()[10] = true;
            }
        }

        /**
         * Gets the value of the 'aid' field
         */
        public java.lang.CharSequence getAid() {
            return aid;
        }

        /**
         * Sets the value of the 'aid' field
         */
        public org.openrtb.mobile.App.Builder setAid(java.lang.CharSequence value) {
            validate(fields()[0], value);
            this.aid = value;
            fieldSetFlags()[0] = true;
            return this;
        }

        /**
         * Checks whether the 'aid' field has been set
         */
        public boolean hasAid() {
            return fieldSetFlags()[0];
        }

        /**
         * Clears the value of the 'aid' field
         */
        public org.openrtb.mobile.App.Builder clearAid() {
            aid = null;
            fieldSetFlags()[0] = false;
            return this;
        }

        /**
         * Gets the value of the 'name' field
         */
        public java.lang.CharSequence getName() {
            return name;
        }

        /**
         * Sets the value of the 'name' field
         */
        public org.openrtb.mobile.App.Builder setName(java.lang.CharSequence value) {
            validate(fields()[1], value);
            this.name = value;
            fieldSetFlags()[1] = true;
            return this;
        }

        /**
         * Checks whether the 'name' field has been set
         */
        public boolean hasName() {
            return fieldSetFlags()[1];
        }

        /**
         * Clears the value of the 'name' field
         */
        public org.openrtb.mobile.App.Builder clearName() {
            name = null;
            fieldSetFlags()[1] = false;
            return this;
        }

        /**
         * Gets the value of the 'domain' field
         */
        public java.lang.CharSequence getDomain() {
            return domain;
        }

        /**
         * Sets the value of the 'domain' field
         */
        public org.openrtb.mobile.App.Builder setDomain(java.lang.CharSequence value) {
            validate(fields()[2], value);
            this.domain = value;
            fieldSetFlags()[2] = true;
            return this;
        }

        /**
         * Checks whether the 'domain' field has been set
         */
        public boolean hasDomain() {
            return fieldSetFlags()[2];
        }

        /**
         * Clears the value of the 'domain' field
         */
        public org.openrtb.mobile.App.Builder clearDomain() {
            domain = null;
            fieldSetFlags()[2] = false;
            return this;
        }

        /**
         * Gets the value of the 'pid' field
         */
        public java.lang.CharSequence getPid() {
            return pid;
        }

        /**
         * Sets the value of the 'pid' field
         */
        public org.openrtb.mobile.App.Builder setPid(java.lang.CharSequence value) {
            validate(fields()[3], value);
            this.pid = value;
            fieldSetFlags()[3] = true;
            return this;
        }

        /**
         * Checks whether the 'pid' field has been set
         */
        public boolean hasPid() {
            return fieldSetFlags()[3];
        }

        /**
         * Clears the value of the 'pid' field
         */
        public org.openrtb.mobile.App.Builder clearPid() {
            pid = null;
            fieldSetFlags()[3] = false;
            return this;
        }

        /**
         * Gets the value of the 'pub' field
         */
        public java.lang.CharSequence getPub() {
            return pub;
        }

        /**
         * Sets the value of the 'pub' field
         */
        public org.openrtb.mobile.App.Builder setPub(java.lang.CharSequence value) {
            validate(fields()[4], value);
            this.pub = value;
            fieldSetFlags()[4] = true;
            return this;
        }

        /**
         * Checks whether the 'pub' field has been set
         */
        public boolean hasPub() {
            return fieldSetFlags()[4];
        }

        /**
         * Clears the value of the 'pub' field
         */
        public org.openrtb.mobile.App.Builder clearPub() {
            pub = null;
            fieldSetFlags()[4] = false;
            return this;
        }

        /**
         * Gets the value of the 'pdomain' field
         */
        public java.lang.CharSequence getPdomain() {
            return pdomain;
        }

        /**
         * Sets the value of the 'pdomain' field
         */
        public org.openrtb.mobile.App.Builder setPdomain(java.lang.CharSequence value) {
            validate(fields()[5], value);
            this.pdomain = value;
            fieldSetFlags()[5] = true;
            return this;
        }

        /**
         * Checks whether the 'pdomain' field has been set
         */
        public boolean hasPdomain() {
            return fieldSetFlags()[5];
        }

        /**
         * Clears the value of the 'pdomain' field
         */
        public org.openrtb.mobile.App.Builder clearPdomain() {
            pdomain = null;
            fieldSetFlags()[5] = false;
            return this;
        }

        /**
         * Gets the value of the 'cat' field
         */
        public java.util.List<java.lang.CharSequence> getCat() {
            return cat;
        }

        /**
         * Sets the value of the 'cat' field
         */
        public org.openrtb.mobile.App.Builder setCat(java.util.List<java.lang.CharSequence> value) {
            validate(fields()[6], value);
            this.cat = value;
            fieldSetFlags()[6] = true;
            return this;
        }

        /**
         * Checks whether the 'cat' field has been set
         */
        public boolean hasCat() {
            return fieldSetFlags()[6];
        }

        /**
         * Clears the value of the 'cat' field
         */
        public org.openrtb.mobile.App.Builder clearCat() {
            cat = null;
            fieldSetFlags()[6] = false;
            return this;
        }

        /**
         * Gets the value of the 'keywords' field
         */
        public java.lang.CharSequence getKeywords() {
            return keywords;
        }

        /**
         * Sets the value of the 'keywords' field
         */
        public org.openrtb.mobile.App.Builder setKeywords(java.lang.CharSequence value) {
            validate(fields()[7], value);
            this.keywords = value;
            fieldSetFlags()[7] = true;
            return this;
        }

        /**
         * Checks whether the 'keywords' field has been set
         */
        public boolean hasKeywords() {
            return fieldSetFlags()[7];
        }

        /**
         * Clears the value of the 'keywords' field
         */
        public org.openrtb.mobile.App.Builder clearKeywords() {
            keywords = null;
            fieldSetFlags()[7] = false;
            return this;
        }

        /**
         * Gets the value of the 'ver' field
         */
        public java.lang.CharSequence getVer() {
            return ver;
        }

        /**
         * Sets the value of the 'ver' field
         */
        public org.openrtb.mobile.App.Builder setVer(java.lang.CharSequence value) {
            validate(fields()[8], value);
            this.ver = value;
            fieldSetFlags()[8] = true;
            return this;
        }

        /**
         * Checks whether the 'ver' field has been set
         */
        public boolean hasVer() {
            return fieldSetFlags()[8];
        }

        /**
         * Clears the value of the 'ver' field
         */
        public org.openrtb.mobile.App.Builder clearVer() {
            ver = null;
            fieldSetFlags()[8] = false;
            return this;
        }

        /**
         * Gets the value of the 'bundle' field
         */
        public java.lang.CharSequence getBundle() {
            return bundle;
        }

        /**
         * Sets the value of the 'bundle' field
         */
        public org.openrtb.mobile.App.Builder setBundle(java.lang.CharSequence value) {
            validate(fields()[9], value);
            this.bundle = value;
            fieldSetFlags()[9] = true;
            return this;
        }

        /**
         * Checks whether the 'bundle' field has been set
         */
        public boolean hasBundle() {
            return fieldSetFlags()[9];
        }

        /**
         * Clears the value of the 'bundle' field
         */
        public org.openrtb.mobile.App.Builder clearBundle() {
            bundle = null;
            fieldSetFlags()[9] = false;
            return this;
        }

        /**
         * Gets the value of the 'paid' field
         */
        public java.lang.Integer getPaid() {
            return paid;
        }

        /**
         * Sets the value of the 'paid' field
         */
        public org.openrtb.mobile.App.Builder setPaid(java.lang.Integer value) {
            validate(fields()[10], value);
            this.paid = value;
            fieldSetFlags()[10] = true;
            return this;
        }

        /**
         * Checks whether the 'paid' field has been set
         */
        public boolean hasPaid() {
            return fieldSetFlags()[10];
        }

        /**
         * Clears the value of the 'paid' field
         */
        public org.openrtb.mobile.App.Builder clearPaid() {
            paid = null;
            fieldSetFlags()[10] = false;
            return this;
        }

        @Override
        public App build() {
            try {
                App record = new App();
                record.aid = fieldSetFlags()[0] ? this.aid : (java.lang.CharSequence) defaultValue(fields()[0]);
                record.name = fieldSetFlags()[1] ? this.name : (java.lang.CharSequence) defaultValue(fields()[1]);
                record.domain = fieldSetFlags()[2] ? this.domain : (java.lang.CharSequence) defaultValue(fields()[2]);
                record.pid = fieldSetFlags()[3] ? this.pid : (java.lang.CharSequence) defaultValue(fields()[3]);
                record.pub = fieldSetFlags()[4] ? this.pub : (java.lang.CharSequence) defaultValue(fields()[4]);
                record.pdomain = fieldSetFlags()[5] ? this.pdomain : (java.lang.CharSequence) defaultValue(fields()[5]);
                record.cat = fieldSetFlags()[6] ? this.cat : (java.util.List<java.lang.CharSequence>) defaultValue(fields()[6]);
                record.keywords = fieldSetFlags()[7] ? this.keywords : (java.lang.CharSequence) defaultValue(fields()[7]);
                record.ver = fieldSetFlags()[8] ? this.ver : (java.lang.CharSequence) defaultValue(fields()[8]);
                record.bundle = fieldSetFlags()[9] ? this.bundle : (java.lang.CharSequence) defaultValue(fields()[9]);
                record.paid = fieldSetFlags()[10] ? this.paid : (java.lang.Integer) defaultValue(fields()[10]);
                return record;
            } catch (Exception e) {
                throw new org.apache.avro.AvroRuntimeException(e);
            }
        }
    }
}
