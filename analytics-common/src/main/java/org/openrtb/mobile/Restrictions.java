/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package org.openrtb.mobile;

@SuppressWarnings("all")
/** Restrictions Object used in Bid Request from OpenRTB Mobile 1.0 Spec */
@org.apache.avro.specific.AvroGenerated
public class Restrictions extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
    public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"Restrictions\",\"namespace\":\"org.openrtb.mobile\",\"doc\":\"Restrictions Object used in Bid Request from OpenRTB Mobile 1.0 Spec\",\"fields\":[{\"name\":\"bcat\",\"type\":[{\"type\":\"array\",\"items\":\"string\"},\"null\"],\"required\":\"false\",\"comment\":\"Array of blocked content categories (see Section 3.1).\"},{\"name\":\"badv\",\"type\":[{\"type\":\"array\",\"items\":\"string\"},\"null\"],\"required\":\"false\",\"comment\":\"Array of blocked advertiser domains.\"}]}");
    @Deprecated
    public java.util.List<java.lang.CharSequence> bcat;
    @Deprecated
    public java.util.List<java.lang.CharSequence> badv;

    /**
     * Default constructor.
     */
    public Restrictions() {
    }

    /**
     * All-args constructor.
     */
    public Restrictions(java.util.List<java.lang.CharSequence> bcat, java.util.List<java.lang.CharSequence> badv) {
        this.bcat = bcat;
        this.badv = badv;
    }

    public org.apache.avro.Schema getSchema() {
        return SCHEMA$;
    }

    // Used by DatumWriter.  Applications should not call.
    public java.lang.Object get(int field$) {
        switch (field$) {
            case 0:
                return bcat;
            case 1:
                return badv;
            default:
                throw new org.apache.avro.AvroRuntimeException("Bad index");
        }
    }

    // Used by DatumReader.  Applications should not call.
    @SuppressWarnings(value = "unchecked")
    public void put(int field$, java.lang.Object value$) {
        switch (field$) {
            case 0:
                bcat = (java.util.List<java.lang.CharSequence>) value$;
                break;
            case 1:
                badv = (java.util.List<java.lang.CharSequence>) value$;
                break;
            default:
                throw new org.apache.avro.AvroRuntimeException("Bad index");
        }
    }

    /**
     * Gets the value of the 'bcat' field.
     */
    public java.util.List<java.lang.CharSequence> getBcat() {
        return bcat;
    }

    /**
     * Sets the value of the 'bcat' field.
     *
     * @param value the value to set.
     */
    public void setBcat(java.util.List<java.lang.CharSequence> value) {
        this.bcat = value;
    }

    /**
     * Gets the value of the 'badv' field.
     */
    public java.util.List<java.lang.CharSequence> getBadv() {
        return badv;
    }

    /**
     * Sets the value of the 'badv' field.
     *
     * @param value the value to set.
     */
    public void setBadv(java.util.List<java.lang.CharSequence> value) {
        this.badv = value;
    }

    /**
     * Creates a new Restrictions RecordBuilder
     */
    public static org.openrtb.mobile.Restrictions.Builder newBuilder() {
        return new org.openrtb.mobile.Restrictions.Builder();
    }

    /**
     * Creates a new Restrictions RecordBuilder by copying an existing Builder
     */
    public static org.openrtb.mobile.Restrictions.Builder newBuilder(org.openrtb.mobile.Restrictions.Builder other) {
        return new org.openrtb.mobile.Restrictions.Builder(other);
    }

    /**
     * Creates a new Restrictions RecordBuilder by copying an existing Restrictions instance
     */
    public static org.openrtb.mobile.Restrictions.Builder newBuilder(org.openrtb.mobile.Restrictions other) {
        return new org.openrtb.mobile.Restrictions.Builder(other);
    }

    /**
     * RecordBuilder for Restrictions instances.
     */
    public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<Restrictions>
            implements org.apache.avro.data.RecordBuilder<Restrictions> {

        private java.util.List<java.lang.CharSequence> bcat;
        private java.util.List<java.lang.CharSequence> badv;

        /**
         * Creates a new Builder
         */
        private Builder() {
            super(org.openrtb.mobile.Restrictions.SCHEMA$);
        }

        /**
         * Creates a Builder by copying an existing Builder
         */
        private Builder(org.openrtb.mobile.Restrictions.Builder other) {
            super(other);
        }

        /**
         * Creates a Builder by copying an existing Restrictions instance
         */
        private Builder(org.openrtb.mobile.Restrictions other) {
            super(org.openrtb.mobile.Restrictions.SCHEMA$);
            if (isValidValue(fields()[0], other.bcat)) {
                this.bcat = data().deepCopy(fields()[0].schema(), other.bcat);
                fieldSetFlags()[0] = true;
            }
            if (isValidValue(fields()[1], other.badv)) {
                this.badv = data().deepCopy(fields()[1].schema(), other.badv);
                fieldSetFlags()[1] = true;
            }
        }

        /**
         * Gets the value of the 'bcat' field
         */
        public java.util.List<java.lang.CharSequence> getBcat() {
            return bcat;
        }

        /**
         * Sets the value of the 'bcat' field
         */
        public org.openrtb.mobile.Restrictions.Builder setBcat(java.util.List<java.lang.CharSequence> value) {
            validate(fields()[0], value);
            this.bcat = value;
            fieldSetFlags()[0] = true;
            return this;
        }

        /**
         * Checks whether the 'bcat' field has been set
         */
        public boolean hasBcat() {
            return fieldSetFlags()[0];
        }

        /**
         * Clears the value of the 'bcat' field
         */
        public org.openrtb.mobile.Restrictions.Builder clearBcat() {
            bcat = null;
            fieldSetFlags()[0] = false;
            return this;
        }

        /**
         * Gets the value of the 'badv' field
         */
        public java.util.List<java.lang.CharSequence> getBadv() {
            return badv;
        }

        /**
         * Sets the value of the 'badv' field
         */
        public org.openrtb.mobile.Restrictions.Builder setBadv(java.util.List<java.lang.CharSequence> value) {
            validate(fields()[1], value);
            this.badv = value;
            fieldSetFlags()[1] = true;
            return this;
        }

        /**
         * Checks whether the 'badv' field has been set
         */
        public boolean hasBadv() {
            return fieldSetFlags()[1];
        }

        /**
         * Clears the value of the 'badv' field
         */
        public org.openrtb.mobile.Restrictions.Builder clearBadv() {
            badv = null;
            fieldSetFlags()[1] = false;
            return this;
        }

        @Override
        public Restrictions build() {
            try {
                Restrictions record = new Restrictions();
                record.bcat = fieldSetFlags()[0] ? this.bcat : (java.util.List<java.lang.CharSequence>) defaultValue(fields()[0]);
                record.badv = fieldSetFlags()[1] ? this.badv : (java.util.List<java.lang.CharSequence>) defaultValue(fields()[1]);
                return record;
            } catch (Exception e) {
                throw new org.apache.avro.AvroRuntimeException(e);
            }
        }
    }
}
