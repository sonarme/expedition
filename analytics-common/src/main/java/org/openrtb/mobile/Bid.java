/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package org.openrtb.mobile;

@SuppressWarnings("all")
/** Bid by a seat for an impression  from OpenRTB Mobile 1.0 Spec */
@org.apache.avro.specific.AvroGenerated
public class Bid extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
    public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"Bid\",\"namespace\":\"org.openrtb.mobile\",\"doc\":\"Bid by a seat for an impression  from OpenRTB Mobile 1.0 Spec\",\"fields\":[{\"name\":\"impid\",\"type\":\"string\",\"required\":\"true\",\"comment\":\"ID of the impression to which this bid applies.\"},{\"name\":\"price\",\"type\":\"string\",\"required\":\"true\",\"comment\":\"Bid price in the currency and units specified.\"},{\"name\":\"adid\",\"type\":[\"string\",\"null\"],\"required\":\"false\",\"comment\":\"ID that references the ad to be served if the bid wins.\"},{\"name\":\"nurl\",\"type\":[\"string\",\"null\"],\"required\":\"false\",\"comment\":\"Win notice URL.\"},{\"name\":\"adm\",\"type\":[\"string\",\"null\"],\"required\":\"false\",\"comment\":\"Actual XHTML ad markup.\"},{\"name\":\"adomain\",\"type\":[\"string\",\"null\"],\"required\":\"false\",\"comment\":\"Advertiser's primary or top-level domain for advertiser checking.\"},{\"name\":\"iurl\",\"type\":[\"string\",\"null\"],\"required\":\"false\",\"comment\":\"Sample image URL (without cache busting) for content checking.\"},{\"name\":\"cid\",\"type\":[\"string\",\"null\"],\"required\":\"false\",\"comment\":\"Campaign ID or similar that appears within the ad markup.\"},{\"name\":\"crid\",\"type\":[\"string\",\"null\"],\"required\":\"false\",\"comment\":\"Creative ID for reporting content issues or defects.\"},{\"name\":\"attr\",\"type\":[{\"type\":\"array\",\"items\":\"string\"},\"null\"],\"required\":\"false\",\"comment\":\"Array of creative attributes (see Section 3.3).\"}]}");
    @Deprecated
    public java.lang.CharSequence impid;
    @Deprecated
    public java.lang.CharSequence price;
    @Deprecated
    public java.lang.CharSequence adid;
    @Deprecated
    public java.lang.CharSequence nurl;
    @Deprecated
    public java.lang.CharSequence adm;
    @Deprecated
    public java.lang.CharSequence adomain;
    @Deprecated
    public java.lang.CharSequence iurl;
    @Deprecated
    public java.lang.CharSequence cid;
    @Deprecated
    public java.lang.CharSequence crid;
    @Deprecated
    public java.util.List<java.lang.CharSequence> attr;

    /**
     * Default constructor.
     */
    public Bid() {
    }

    /**
     * All-args constructor.
     */
    public Bid(java.lang.CharSequence impid, java.lang.CharSequence price, java.lang.CharSequence adid, java.lang.CharSequence nurl, java.lang.CharSequence adm, java.lang.CharSequence adomain, java.lang.CharSequence iurl, java.lang.CharSequence cid, java.lang.CharSequence crid, java.util.List<java.lang.CharSequence> attr) {
        this.impid = impid;
        this.price = price;
        this.adid = adid;
        this.nurl = nurl;
        this.adm = adm;
        this.adomain = adomain;
        this.iurl = iurl;
        this.cid = cid;
        this.crid = crid;
        this.attr = attr;
    }

    public org.apache.avro.Schema getSchema() {
        return SCHEMA$;
    }

    // Used by DatumWriter.  Applications should not call.
    public java.lang.Object get(int field$) {
        switch (field$) {
            case 0:
                return impid;
            case 1:
                return price;
            case 2:
                return adid;
            case 3:
                return nurl;
            case 4:
                return adm;
            case 5:
                return adomain;
            case 6:
                return iurl;
            case 7:
                return cid;
            case 8:
                return crid;
            case 9:
                return attr;
            default:
                throw new org.apache.avro.AvroRuntimeException("Bad index");
        }
    }

    // Used by DatumReader.  Applications should not call.
    @SuppressWarnings(value = "unchecked")
    public void put(int field$, java.lang.Object value$) {
        switch (field$) {
            case 0:
                impid = (java.lang.CharSequence) value$;
                break;
            case 1:
                price = (java.lang.CharSequence) value$;
                break;
            case 2:
                adid = (java.lang.CharSequence) value$;
                break;
            case 3:
                nurl = (java.lang.CharSequence) value$;
                break;
            case 4:
                adm = (java.lang.CharSequence) value$;
                break;
            case 5:
                adomain = (java.lang.CharSequence) value$;
                break;
            case 6:
                iurl = (java.lang.CharSequence) value$;
                break;
            case 7:
                cid = (java.lang.CharSequence) value$;
                break;
            case 8:
                crid = (java.lang.CharSequence) value$;
                break;
            case 9:
                attr = (java.util.List<java.lang.CharSequence>) value$;
                break;
            default:
                throw new org.apache.avro.AvroRuntimeException("Bad index");
        }
    }

    /**
     * Gets the value of the 'impid' field.
     */
    public java.lang.CharSequence getImpid() {
        return impid;
    }

    /**
     * Sets the value of the 'impid' field.
     *
     * @param value the value to set.
     */
    public void setImpid(java.lang.CharSequence value) {
        this.impid = value;
    }

    /**
     * Gets the value of the 'price' field.
     */
    public java.lang.CharSequence getPrice() {
        return price;
    }

    /**
     * Sets the value of the 'price' field.
     *
     * @param value the value to set.
     */
    public void setPrice(java.lang.CharSequence value) {
        this.price = value;
    }

    /**
     * Gets the value of the 'adid' field.
     */
    public java.lang.CharSequence getAdid() {
        return adid;
    }

    /**
     * Sets the value of the 'adid' field.
     *
     * @param value the value to set.
     */
    public void setAdid(java.lang.CharSequence value) {
        this.adid = value;
    }

    /**
     * Gets the value of the 'nurl' field.
     */
    public java.lang.CharSequence getNurl() {
        return nurl;
    }

    /**
     * Sets the value of the 'nurl' field.
     *
     * @param value the value to set.
     */
    public void setNurl(java.lang.CharSequence value) {
        this.nurl = value;
    }

    /**
     * Gets the value of the 'adm' field.
     */
    public java.lang.CharSequence getAdm() {
        return adm;
    }

    /**
     * Sets the value of the 'adm' field.
     *
     * @param value the value to set.
     */
    public void setAdm(java.lang.CharSequence value) {
        this.adm = value;
    }

    /**
     * Gets the value of the 'adomain' field.
     */
    public java.lang.CharSequence getAdomain() {
        return adomain;
    }

    /**
     * Sets the value of the 'adomain' field.
     *
     * @param value the value to set.
     */
    public void setAdomain(java.lang.CharSequence value) {
        this.adomain = value;
    }

    /**
     * Gets the value of the 'iurl' field.
     */
    public java.lang.CharSequence getIurl() {
        return iurl;
    }

    /**
     * Sets the value of the 'iurl' field.
     *
     * @param value the value to set.
     */
    public void setIurl(java.lang.CharSequence value) {
        this.iurl = value;
    }

    /**
     * Gets the value of the 'cid' field.
     */
    public java.lang.CharSequence getCid() {
        return cid;
    }

    /**
     * Sets the value of the 'cid' field.
     *
     * @param value the value to set.
     */
    public void setCid(java.lang.CharSequence value) {
        this.cid = value;
    }

    /**
     * Gets the value of the 'crid' field.
     */
    public java.lang.CharSequence getCrid() {
        return crid;
    }

    /**
     * Sets the value of the 'crid' field.
     *
     * @param value the value to set.
     */
    public void setCrid(java.lang.CharSequence value) {
        this.crid = value;
    }

    /**
     * Gets the value of the 'attr' field.
     */
    public java.util.List<java.lang.CharSequence> getAttr() {
        return attr;
    }

    /**
     * Sets the value of the 'attr' field.
     *
     * @param value the value to set.
     */
    public void setAttr(java.util.List<java.lang.CharSequence> value) {
        this.attr = value;
    }

    /**
     * Creates a new Bid RecordBuilder
     */
    public static org.openrtb.mobile.Bid.Builder newBuilder() {
        return new org.openrtb.mobile.Bid.Builder();
    }

    /**
     * Creates a new Bid RecordBuilder by copying an existing Builder
     */
    public static org.openrtb.mobile.Bid.Builder newBuilder(org.openrtb.mobile.Bid.Builder other) {
        return new org.openrtb.mobile.Bid.Builder(other);
    }

    /**
     * Creates a new Bid RecordBuilder by copying an existing Bid instance
     */
    public static org.openrtb.mobile.Bid.Builder newBuilder(org.openrtb.mobile.Bid other) {
        return new org.openrtb.mobile.Bid.Builder(other);
    }

    /**
     * RecordBuilder for Bid instances.
     */
    public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<Bid>
            implements org.apache.avro.data.RecordBuilder<Bid> {

        private java.lang.CharSequence impid;
        private java.lang.CharSequence price;
        private java.lang.CharSequence adid;
        private java.lang.CharSequence nurl;
        private java.lang.CharSequence adm;
        private java.lang.CharSequence adomain;
        private java.lang.CharSequence iurl;
        private java.lang.CharSequence cid;
        private java.lang.CharSequence crid;
        private java.util.List<java.lang.CharSequence> attr;

        /**
         * Creates a new Builder
         */
        private Builder() {
            super(org.openrtb.mobile.Bid.SCHEMA$);
        }

        /**
         * Creates a Builder by copying an existing Builder
         */
        private Builder(org.openrtb.mobile.Bid.Builder other) {
            super(other);
        }

        /**
         * Creates a Builder by copying an existing Bid instance
         */
        private Builder(org.openrtb.mobile.Bid other) {
            super(org.openrtb.mobile.Bid.SCHEMA$);
            if (isValidValue(fields()[0], other.impid)) {
                this.impid = data().deepCopy(fields()[0].schema(), other.impid);
                fieldSetFlags()[0] = true;
            }
            if (isValidValue(fields()[1], other.price)) {
                this.price = data().deepCopy(fields()[1].schema(), other.price);
                fieldSetFlags()[1] = true;
            }
            if (isValidValue(fields()[2], other.adid)) {
                this.adid = data().deepCopy(fields()[2].schema(), other.adid);
                fieldSetFlags()[2] = true;
            }
            if (isValidValue(fields()[3], other.nurl)) {
                this.nurl = data().deepCopy(fields()[3].schema(), other.nurl);
                fieldSetFlags()[3] = true;
            }
            if (isValidValue(fields()[4], other.adm)) {
                this.adm = data().deepCopy(fields()[4].schema(), other.adm);
                fieldSetFlags()[4] = true;
            }
            if (isValidValue(fields()[5], other.adomain)) {
                this.adomain = data().deepCopy(fields()[5].schema(), other.adomain);
                fieldSetFlags()[5] = true;
            }
            if (isValidValue(fields()[6], other.iurl)) {
                this.iurl = data().deepCopy(fields()[6].schema(), other.iurl);
                fieldSetFlags()[6] = true;
            }
            if (isValidValue(fields()[7], other.cid)) {
                this.cid = data().deepCopy(fields()[7].schema(), other.cid);
                fieldSetFlags()[7] = true;
            }
            if (isValidValue(fields()[8], other.crid)) {
                this.crid = data().deepCopy(fields()[8].schema(), other.crid);
                fieldSetFlags()[8] = true;
            }
            if (isValidValue(fields()[9], other.attr)) {
                this.attr = data().deepCopy(fields()[9].schema(), other.attr);
                fieldSetFlags()[9] = true;
            }
        }

        /**
         * Gets the value of the 'impid' field
         */
        public java.lang.CharSequence getImpid() {
            return impid;
        }

        /**
         * Sets the value of the 'impid' field
         */
        public org.openrtb.mobile.Bid.Builder setImpid(java.lang.CharSequence value) {
            validate(fields()[0], value);
            this.impid = value;
            fieldSetFlags()[0] = true;
            return this;
        }

        /**
         * Checks whether the 'impid' field has been set
         */
        public boolean hasImpid() {
            return fieldSetFlags()[0];
        }

        /**
         * Clears the value of the 'impid' field
         */
        public org.openrtb.mobile.Bid.Builder clearImpid() {
            impid = null;
            fieldSetFlags()[0] = false;
            return this;
        }

        /**
         * Gets the value of the 'price' field
         */
        public java.lang.CharSequence getPrice() {
            return price;
        }

        /**
         * Sets the value of the 'price' field
         */
        public org.openrtb.mobile.Bid.Builder setPrice(java.lang.CharSequence value) {
            validate(fields()[1], value);
            this.price = value;
            fieldSetFlags()[1] = true;
            return this;
        }

        /**
         * Checks whether the 'price' field has been set
         */
        public boolean hasPrice() {
            return fieldSetFlags()[1];
        }

        /**
         * Clears the value of the 'price' field
         */
        public org.openrtb.mobile.Bid.Builder clearPrice() {
            price = null;
            fieldSetFlags()[1] = false;
            return this;
        }

        /**
         * Gets the value of the 'adid' field
         */
        public java.lang.CharSequence getAdid() {
            return adid;
        }

        /**
         * Sets the value of the 'adid' field
         */
        public org.openrtb.mobile.Bid.Builder setAdid(java.lang.CharSequence value) {
            validate(fields()[2], value);
            this.adid = value;
            fieldSetFlags()[2] = true;
            return this;
        }

        /**
         * Checks whether the 'adid' field has been set
         */
        public boolean hasAdid() {
            return fieldSetFlags()[2];
        }

        /**
         * Clears the value of the 'adid' field
         */
        public org.openrtb.mobile.Bid.Builder clearAdid() {
            adid = null;
            fieldSetFlags()[2] = false;
            return this;
        }

        /**
         * Gets the value of the 'nurl' field
         */
        public java.lang.CharSequence getNurl() {
            return nurl;
        }

        /**
         * Sets the value of the 'nurl' field
         */
        public org.openrtb.mobile.Bid.Builder setNurl(java.lang.CharSequence value) {
            validate(fields()[3], value);
            this.nurl = value;
            fieldSetFlags()[3] = true;
            return this;
        }

        /**
         * Checks whether the 'nurl' field has been set
         */
        public boolean hasNurl() {
            return fieldSetFlags()[3];
        }

        /**
         * Clears the value of the 'nurl' field
         */
        public org.openrtb.mobile.Bid.Builder clearNurl() {
            nurl = null;
            fieldSetFlags()[3] = false;
            return this;
        }

        /**
         * Gets the value of the 'adm' field
         */
        public java.lang.CharSequence getAdm() {
            return adm;
        }

        /**
         * Sets the value of the 'adm' field
         */
        public org.openrtb.mobile.Bid.Builder setAdm(java.lang.CharSequence value) {
            validate(fields()[4], value);
            this.adm = value;
            fieldSetFlags()[4] = true;
            return this;
        }

        /**
         * Checks whether the 'adm' field has been set
         */
        public boolean hasAdm() {
            return fieldSetFlags()[4];
        }

        /**
         * Clears the value of the 'adm' field
         */
        public org.openrtb.mobile.Bid.Builder clearAdm() {
            adm = null;
            fieldSetFlags()[4] = false;
            return this;
        }

        /**
         * Gets the value of the 'adomain' field
         */
        public java.lang.CharSequence getAdomain() {
            return adomain;
        }

        /**
         * Sets the value of the 'adomain' field
         */
        public org.openrtb.mobile.Bid.Builder setAdomain(java.lang.CharSequence value) {
            validate(fields()[5], value);
            this.adomain = value;
            fieldSetFlags()[5] = true;
            return this;
        }

        /**
         * Checks whether the 'adomain' field has been set
         */
        public boolean hasAdomain() {
            return fieldSetFlags()[5];
        }

        /**
         * Clears the value of the 'adomain' field
         */
        public org.openrtb.mobile.Bid.Builder clearAdomain() {
            adomain = null;
            fieldSetFlags()[5] = false;
            return this;
        }

        /**
         * Gets the value of the 'iurl' field
         */
        public java.lang.CharSequence getIurl() {
            return iurl;
        }

        /**
         * Sets the value of the 'iurl' field
         */
        public org.openrtb.mobile.Bid.Builder setIurl(java.lang.CharSequence value) {
            validate(fields()[6], value);
            this.iurl = value;
            fieldSetFlags()[6] = true;
            return this;
        }

        /**
         * Checks whether the 'iurl' field has been set
         */
        public boolean hasIurl() {
            return fieldSetFlags()[6];
        }

        /**
         * Clears the value of the 'iurl' field
         */
        public org.openrtb.mobile.Bid.Builder clearIurl() {
            iurl = null;
            fieldSetFlags()[6] = false;
            return this;
        }

        /**
         * Gets the value of the 'cid' field
         */
        public java.lang.CharSequence getCid() {
            return cid;
        }

        /**
         * Sets the value of the 'cid' field
         */
        public org.openrtb.mobile.Bid.Builder setCid(java.lang.CharSequence value) {
            validate(fields()[7], value);
            this.cid = value;
            fieldSetFlags()[7] = true;
            return this;
        }

        /**
         * Checks whether the 'cid' field has been set
         */
        public boolean hasCid() {
            return fieldSetFlags()[7];
        }

        /**
         * Clears the value of the 'cid' field
         */
        public org.openrtb.mobile.Bid.Builder clearCid() {
            cid = null;
            fieldSetFlags()[7] = false;
            return this;
        }

        /**
         * Gets the value of the 'crid' field
         */
        public java.lang.CharSequence getCrid() {
            return crid;
        }

        /**
         * Sets the value of the 'crid' field
         */
        public org.openrtb.mobile.Bid.Builder setCrid(java.lang.CharSequence value) {
            validate(fields()[8], value);
            this.crid = value;
            fieldSetFlags()[8] = true;
            return this;
        }

        /**
         * Checks whether the 'crid' field has been set
         */
        public boolean hasCrid() {
            return fieldSetFlags()[8];
        }

        /**
         * Clears the value of the 'crid' field
         */
        public org.openrtb.mobile.Bid.Builder clearCrid() {
            crid = null;
            fieldSetFlags()[8] = false;
            return this;
        }

        /**
         * Gets the value of the 'attr' field
         */
        public java.util.List<java.lang.CharSequence> getAttr() {
            return attr;
        }

        /**
         * Sets the value of the 'attr' field
         */
        public org.openrtb.mobile.Bid.Builder setAttr(java.util.List<java.lang.CharSequence> value) {
            validate(fields()[9], value);
            this.attr = value;
            fieldSetFlags()[9] = true;
            return this;
        }

        /**
         * Checks whether the 'attr' field has been set
         */
        public boolean hasAttr() {
            return fieldSetFlags()[9];
        }

        /**
         * Clears the value of the 'attr' field
         */
        public org.openrtb.mobile.Bid.Builder clearAttr() {
            attr = null;
            fieldSetFlags()[9] = false;
            return this;
        }

        @Override
        public Bid build() {
            try {
                Bid record = new Bid();
                record.impid = fieldSetFlags()[0] ? this.impid : (java.lang.CharSequence) defaultValue(fields()[0]);
                record.price = fieldSetFlags()[1] ? this.price : (java.lang.CharSequence) defaultValue(fields()[1]);
                record.adid = fieldSetFlags()[2] ? this.adid : (java.lang.CharSequence) defaultValue(fields()[2]);
                record.nurl = fieldSetFlags()[3] ? this.nurl : (java.lang.CharSequence) defaultValue(fields()[3]);
                record.adm = fieldSetFlags()[4] ? this.adm : (java.lang.CharSequence) defaultValue(fields()[4]);
                record.adomain = fieldSetFlags()[5] ? this.adomain : (java.lang.CharSequence) defaultValue(fields()[5]);
                record.iurl = fieldSetFlags()[6] ? this.iurl : (java.lang.CharSequence) defaultValue(fields()[6]);
                record.cid = fieldSetFlags()[7] ? this.cid : (java.lang.CharSequence) defaultValue(fields()[7]);
                record.crid = fieldSetFlags()[8] ? this.crid : (java.lang.CharSequence) defaultValue(fields()[8]);
                record.attr = fieldSetFlags()[9] ? this.attr : (java.util.List<java.lang.CharSequence>) defaultValue(fields()[9]);
                return record;
            } catch (Exception e) {
                throw new org.apache.avro.AvroRuntimeException(e);
            }
        }
    }
}
