/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package org.openrtb.mobile;

@SuppressWarnings("all")
/** Top-Level BidResponse Object from OpenRTB Mobile 1.0 Spec */
@org.apache.avro.specific.AvroGenerated
public class BidResponse extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
    public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"BidResponse\",\"namespace\":\"org.openrtb.mobile\",\"doc\":\"Top-Level BidResponse Object from OpenRTB Mobile 1.0 Spec\",\"fields\":[{\"name\":\"id\",\"type\":\"string\",\"required\":\"true\",\"comment\":\"ID of the bid request.\"},{\"name\":\"bidid\",\"type\":[\"string\",\"null\"],\"required\":\"false\",\"comment\":\"Bid response ID to assist tracking for bidders.\"},{\"name\":\"nbr\",\"type\":[\"int\",\"null\"],\"required\":\"false\",\"comment\":\"Reason for not bidding (see Section 3.6); default is '0' (unknown).\"},{\"name\":\"cur\",\"type\":[\"string\",\"null\"],\"required\":\"false\",\"comment\":\"Bid currency using ISO-4217 alphabetic codes; default is 'USD'.\"},{\"name\":\"units\",\"type\":[\"int\",\"null\"],\"required\":\"false\",\"comment\":\"Bid units (see Section 3.5); default is '0' (CPM).\"},{\"name\":\"seatbid\",\"type\":[{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"SeatBid\",\"doc\":\"Set of bids by a seat from OpenRTB Mobile 1.0 Spec\",\"fields\":[{\"name\":\"seat\",\"type\":\"string\",\"required\":\"false\",\"comment\":\"ID of the bidder seat on whose behalf this bid is made.\"},{\"name\":\"group\",\"type\":[\"int\",\"null\"],\"required\":\"false\",\"comment\":\"'1' means impressions must be won-lost as a group; default is '0'.\"},{\"name\":\"bid\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"Bid\",\"doc\":\"Bid by a seat for an impression  from OpenRTB Mobile 1.0 Spec\",\"fields\":[{\"name\":\"impid\",\"type\":\"string\",\"required\":\"true\",\"comment\":\"ID of the impression to which this bid applies.\"},{\"name\":\"price\",\"type\":\"string\",\"required\":\"true\",\"comment\":\"Bid price in the currency and units specified.\"},{\"name\":\"adid\",\"type\":[\"string\",\"null\"],\"required\":\"false\",\"comment\":\"ID that references the ad to be served if the bid wins.\"},{\"name\":\"nurl\",\"type\":[\"string\",\"null\"],\"required\":\"false\",\"comment\":\"Win notice URL.\"},{\"name\":\"adm\",\"type\":[\"string\",\"null\"],\"required\":\"false\",\"comment\":\"Actual XHTML ad markup.\"},{\"name\":\"adomain\",\"type\":[\"string\",\"null\"],\"required\":\"false\",\"comment\":\"Advertiser's primary or top-level domain for advertiser checking.\"},{\"name\":\"iurl\",\"type\":[\"string\",\"null\"],\"required\":\"false\",\"comment\":\"Sample image URL (without cache busting) for content checking.\"},{\"name\":\"cid\",\"type\":[\"string\",\"null\"],\"required\":\"false\",\"comment\":\"Campaign ID or similar that appears within the ad markup.\"},{\"name\":\"crid\",\"type\":[\"string\",\"null\"],\"required\":\"false\",\"comment\":\"Creative ID for reporting content issues or defects.\"},{\"name\":\"attr\",\"type\":[{\"type\":\"array\",\"items\":\"string\"},\"null\"],\"required\":\"false\",\"comment\":\"Array of creative attributes (see Section 3.3).\"}]}},\"required\":\"true\",\"comment\":\"0 or more bid objects; related to imp objects in the bid request.\"}]}},\"null\"],\"required\":\"false\",\"comment\":\"0 or more sets of bids by seat\"}]}");
    @Deprecated
    public java.lang.CharSequence id;
    @Deprecated
    public java.lang.CharSequence bidid;
    @Deprecated
    public java.lang.Integer nbr;
    @Deprecated
    public java.lang.CharSequence cur;
    @Deprecated
    public java.lang.Integer units;
    @Deprecated
    public java.util.List<org.openrtb.mobile.SeatBid> seatbid;

    /**
     * Default constructor.
     */
    public BidResponse() {
    }

    /**
     * All-args constructor.
     */
    public BidResponse(java.lang.CharSequence id, java.lang.CharSequence bidid, java.lang.Integer nbr, java.lang.CharSequence cur, java.lang.Integer units, java.util.List<org.openrtb.mobile.SeatBid> seatbid) {
        this.id = id;
        this.bidid = bidid;
        this.nbr = nbr;
        this.cur = cur;
        this.units = units;
        this.seatbid = seatbid;
    }

    public org.apache.avro.Schema getSchema() {
        return SCHEMA$;
    }

    // Used by DatumWriter.  Applications should not call.
    public java.lang.Object get(int field$) {
        switch (field$) {
            case 0:
                return id;
            case 1:
                return bidid;
            case 2:
                return nbr;
            case 3:
                return cur;
            case 4:
                return units;
            case 5:
                return seatbid;
            default:
                throw new org.apache.avro.AvroRuntimeException("Bad index");
        }
    }

    // Used by DatumReader.  Applications should not call.
    @SuppressWarnings(value = "unchecked")
    public void put(int field$, java.lang.Object value$) {
        switch (field$) {
            case 0:
                id = (java.lang.CharSequence) value$;
                break;
            case 1:
                bidid = (java.lang.CharSequence) value$;
                break;
            case 2:
                nbr = (java.lang.Integer) value$;
                break;
            case 3:
                cur = (java.lang.CharSequence) value$;
                break;
            case 4:
                units = (java.lang.Integer) value$;
                break;
            case 5:
                seatbid = (java.util.List<org.openrtb.mobile.SeatBid>) value$;
                break;
            default:
                throw new org.apache.avro.AvroRuntimeException("Bad index");
        }
    }

    /**
     * Gets the value of the 'id' field.
     */
    public java.lang.CharSequence getId() {
        return id;
    }

    /**
     * Sets the value of the 'id' field.
     *
     * @param value the value to set.
     */
    public void setId(java.lang.CharSequence value) {
        this.id = value;
    }

    /**
     * Gets the value of the 'bidid' field.
     */
    public java.lang.CharSequence getBidid() {
        return bidid;
    }

    /**
     * Sets the value of the 'bidid' field.
     *
     * @param value the value to set.
     */
    public void setBidid(java.lang.CharSequence value) {
        this.bidid = value;
    }

    /**
     * Gets the value of the 'nbr' field.
     */
    public java.lang.Integer getNbr() {
        return nbr;
    }

    /**
     * Sets the value of the 'nbr' field.
     *
     * @param value the value to set.
     */
    public void setNbr(java.lang.Integer value) {
        this.nbr = value;
    }

    /**
     * Gets the value of the 'cur' field.
     */
    public java.lang.CharSequence getCur() {
        return cur;
    }

    /**
     * Sets the value of the 'cur' field.
     *
     * @param value the value to set.
     */
    public void setCur(java.lang.CharSequence value) {
        this.cur = value;
    }

    /**
     * Gets the value of the 'units' field.
     */
    public java.lang.Integer getUnits() {
        return units;
    }

    /**
     * Sets the value of the 'units' field.
     *
     * @param value the value to set.
     */
    public void setUnits(java.lang.Integer value) {
        this.units = value;
    }

    /**
     * Gets the value of the 'seatbid' field.
     */
    public java.util.List<org.openrtb.mobile.SeatBid> getSeatbid() {
        return seatbid;
    }

    /**
     * Sets the value of the 'seatbid' field.
     *
     * @param value the value to set.
     */
    public void setSeatbid(java.util.List<org.openrtb.mobile.SeatBid> value) {
        this.seatbid = value;
    }

    /**
     * Creates a new BidResponse RecordBuilder
     */
    public static org.openrtb.mobile.BidResponse.Builder newBuilder() {
        return new org.openrtb.mobile.BidResponse.Builder();
    }

    /**
     * Creates a new BidResponse RecordBuilder by copying an existing Builder
     */
    public static org.openrtb.mobile.BidResponse.Builder newBuilder(org.openrtb.mobile.BidResponse.Builder other) {
        return new org.openrtb.mobile.BidResponse.Builder(other);
    }

    /**
     * Creates a new BidResponse RecordBuilder by copying an existing BidResponse instance
     */
    public static org.openrtb.mobile.BidResponse.Builder newBuilder(org.openrtb.mobile.BidResponse other) {
        return new org.openrtb.mobile.BidResponse.Builder(other);
    }

    /**
     * RecordBuilder for BidResponse instances.
     */
    public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<BidResponse>
            implements org.apache.avro.data.RecordBuilder<BidResponse> {

        private java.lang.CharSequence id;
        private java.lang.CharSequence bidid;
        private java.lang.Integer nbr;
        private java.lang.CharSequence cur;
        private java.lang.Integer units;
        private java.util.List<org.openrtb.mobile.SeatBid> seatbid;

        /**
         * Creates a new Builder
         */
        private Builder() {
            super(org.openrtb.mobile.BidResponse.SCHEMA$);
        }

        /**
         * Creates a Builder by copying an existing Builder
         */
        private Builder(org.openrtb.mobile.BidResponse.Builder other) {
            super(other);
        }

        /**
         * Creates a Builder by copying an existing BidResponse instance
         */
        private Builder(org.openrtb.mobile.BidResponse other) {
            super(org.openrtb.mobile.BidResponse.SCHEMA$);
            if (isValidValue(fields()[0], other.id)) {
                this.id = data().deepCopy(fields()[0].schema(), other.id);
                fieldSetFlags()[0] = true;
            }
            if (isValidValue(fields()[1], other.bidid)) {
                this.bidid = data().deepCopy(fields()[1].schema(), other.bidid);
                fieldSetFlags()[1] = true;
            }
            if (isValidValue(fields()[2], other.nbr)) {
                this.nbr = data().deepCopy(fields()[2].schema(), other.nbr);
                fieldSetFlags()[2] = true;
            }
            if (isValidValue(fields()[3], other.cur)) {
                this.cur = data().deepCopy(fields()[3].schema(), other.cur);
                fieldSetFlags()[3] = true;
            }
            if (isValidValue(fields()[4], other.units)) {
                this.units = data().deepCopy(fields()[4].schema(), other.units);
                fieldSetFlags()[4] = true;
            }
            if (isValidValue(fields()[5], other.seatbid)) {
                this.seatbid = data().deepCopy(fields()[5].schema(), other.seatbid);
                fieldSetFlags()[5] = true;
            }
        }

        /**
         * Gets the value of the 'id' field
         */
        public java.lang.CharSequence getId() {
            return id;
        }

        /**
         * Sets the value of the 'id' field
         */
        public org.openrtb.mobile.BidResponse.Builder setId(java.lang.CharSequence value) {
            validate(fields()[0], value);
            this.id = value;
            fieldSetFlags()[0] = true;
            return this;
        }

        /**
         * Checks whether the 'id' field has been set
         */
        public boolean hasId() {
            return fieldSetFlags()[0];
        }

        /**
         * Clears the value of the 'id' field
         */
        public org.openrtb.mobile.BidResponse.Builder clearId() {
            id = null;
            fieldSetFlags()[0] = false;
            return this;
        }

        /**
         * Gets the value of the 'bidid' field
         */
        public java.lang.CharSequence getBidid() {
            return bidid;
        }

        /**
         * Sets the value of the 'bidid' field
         */
        public org.openrtb.mobile.BidResponse.Builder setBidid(java.lang.CharSequence value) {
            validate(fields()[1], value);
            this.bidid = value;
            fieldSetFlags()[1] = true;
            return this;
        }

        /**
         * Checks whether the 'bidid' field has been set
         */
        public boolean hasBidid() {
            return fieldSetFlags()[1];
        }

        /**
         * Clears the value of the 'bidid' field
         */
        public org.openrtb.mobile.BidResponse.Builder clearBidid() {
            bidid = null;
            fieldSetFlags()[1] = false;
            return this;
        }

        /**
         * Gets the value of the 'nbr' field
         */
        public java.lang.Integer getNbr() {
            return nbr;
        }

        /**
         * Sets the value of the 'nbr' field
         */
        public org.openrtb.mobile.BidResponse.Builder setNbr(java.lang.Integer value) {
            validate(fields()[2], value);
            this.nbr = value;
            fieldSetFlags()[2] = true;
            return this;
        }

        /**
         * Checks whether the 'nbr' field has been set
         */
        public boolean hasNbr() {
            return fieldSetFlags()[2];
        }

        /**
         * Clears the value of the 'nbr' field
         */
        public org.openrtb.mobile.BidResponse.Builder clearNbr() {
            nbr = null;
            fieldSetFlags()[2] = false;
            return this;
        }

        /**
         * Gets the value of the 'cur' field
         */
        public java.lang.CharSequence getCur() {
            return cur;
        }

        /**
         * Sets the value of the 'cur' field
         */
        public org.openrtb.mobile.BidResponse.Builder setCur(java.lang.CharSequence value) {
            validate(fields()[3], value);
            this.cur = value;
            fieldSetFlags()[3] = true;
            return this;
        }

        /**
         * Checks whether the 'cur' field has been set
         */
        public boolean hasCur() {
            return fieldSetFlags()[3];
        }

        /**
         * Clears the value of the 'cur' field
         */
        public org.openrtb.mobile.BidResponse.Builder clearCur() {
            cur = null;
            fieldSetFlags()[3] = false;
            return this;
        }

        /**
         * Gets the value of the 'units' field
         */
        public java.lang.Integer getUnits() {
            return units;
        }

        /**
         * Sets the value of the 'units' field
         */
        public org.openrtb.mobile.BidResponse.Builder setUnits(java.lang.Integer value) {
            validate(fields()[4], value);
            this.units = value;
            fieldSetFlags()[4] = true;
            return this;
        }

        /**
         * Checks whether the 'units' field has been set
         */
        public boolean hasUnits() {
            return fieldSetFlags()[4];
        }

        /**
         * Clears the value of the 'units' field
         */
        public org.openrtb.mobile.BidResponse.Builder clearUnits() {
            units = null;
            fieldSetFlags()[4] = false;
            return this;
        }

        /**
         * Gets the value of the 'seatbid' field
         */
        public java.util.List<org.openrtb.mobile.SeatBid> getSeatbid() {
            return seatbid;
        }

        /**
         * Sets the value of the 'seatbid' field
         */
        public org.openrtb.mobile.BidResponse.Builder setSeatbid(java.util.List<org.openrtb.mobile.SeatBid> value) {
            validate(fields()[5], value);
            this.seatbid = value;
            fieldSetFlags()[5] = true;
            return this;
        }

        /**
         * Checks whether the 'seatbid' field has been set
         */
        public boolean hasSeatbid() {
            return fieldSetFlags()[5];
        }

        /**
         * Clears the value of the 'seatbid' field
         */
        public org.openrtb.mobile.BidResponse.Builder clearSeatbid() {
            seatbid = null;
            fieldSetFlags()[5] = false;
            return this;
        }

        @Override
        public BidResponse build() {
            try {
                BidResponse record = new BidResponse();
                record.id = fieldSetFlags()[0] ? this.id : (java.lang.CharSequence) defaultValue(fields()[0]);
                record.bidid = fieldSetFlags()[1] ? this.bidid : (java.lang.CharSequence) defaultValue(fields()[1]);
                record.nbr = fieldSetFlags()[2] ? this.nbr : (java.lang.Integer) defaultValue(fields()[2]);
                record.cur = fieldSetFlags()[3] ? this.cur : (java.lang.CharSequence) defaultValue(fields()[3]);
                record.units = fieldSetFlags()[4] ? this.units : (java.lang.Integer) defaultValue(fields()[4]);
                record.seatbid = fieldSetFlags()[5] ? this.seatbid : (java.util.List<org.openrtb.mobile.SeatBid>) defaultValue(fields()[5]);
                return record;
            } catch (Exception e) {
                throw new org.apache.avro.AvroRuntimeException(e);
            }
        }
    }
}
